import { type NextPage } from "next";
import Head from "next/head";

import { trpc } from "../utils/trpc";
import { useEffect, useState } from "react";
import type { ShoppingItem } from "@prisma/client";
import ShoppingItemModal from "../components/shoppingItemModal";

const Home: NextPage = () => {

  const { data: queryData } = trpc.shoppingItem.getShoppingItems.useQuery();
  const { data: addData, mutateAsync: addMutation } = trpc.shoppingItem.addShoppingItem.useMutation();
  const { data: deleteData, mutateAsync: deleteMutation } = trpc.shoppingItem.deleteShoppingItem.useMutation();
  const { data: updateData, mutateAsync: updateMutation } = trpc.shoppingItem.updateShoppingItem.useMutation();

  const [shoppingItems, setShoppingItems] = useState<ShoppingItem[]>([]);

  useEffect(() => {
    if (queryData) {
      setShoppingItems(queryData);
    }
  }, [queryData]);

  useEffect(() => {
    if (addData) {
      setShoppingItems(prevItems => [...prevItems, addData]);
    }
  }, [addData]);

  useEffect(() => {
    if (deleteData) {
      setShoppingItems(prevItems => prevItems.filter(it => it.id !== deleteData.id));
    }
  }, [deleteData]);

  useEffect(() => {
    if (updateData) {
      setShoppingItems(prevItems => {
          return prevItems.map(item => {
            if (item.id !== updateData.id) {
              return item;
            } else {
              return {
                id: item.id,
                name: updateData.name,
                checked: updateData.checked
              };
            }
          });
        }
      );
    }
  }, [updateData]);

  return (
    <>
      <Head>
        <title>T3 Shopping List</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={"ero min-h-screen bg-base-200"}>
        <div className={"hero-content text-center"}>
          <div className={"max-w-md"}>
            <h1 className={"text-5xl font-bold"}>My Shopping List</h1>
            <ShoppingItemModal onShoppingItemAdd={(itemName) => addMutation({ name: itemName })} />

            <ul className="menu mt-10 font-semibold">
              {shoppingItems.map(shoppingItem =>
                <li
                  className={shoppingItem.checked ? "line-through mb-1.5 text-red-500" : "mb-1.5"}
                  key={shoppingItem.id}
                  onClick={() => updateMutation({
                    id: shoppingItem.id,
                    name: shoppingItem.name,
                    checked: !shoppingItem.checked
                  })}
                >
                  <div className={"flex-row justify-between"}>
                    <span>{shoppingItem.name}</span>
                    <button className={"btn btn-outline btn-error"}
                            onClick={() => deleteMutation({ id: shoppingItem.id })}
                    >
                      X
                    </button>
                  </div>
                </li>
              )}
            </ul>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
